{{#frost-scroll class='frost-non-selected-bucket'}}
  {{#each redux-state.nonSelectedItems as |item index|}}
    {{frost-bucket-item
      item=item
      titleAttr=titleAttr
      subtitleAttr=subtitleAttr
      valueAttr=valueAttr
      clickItem=(action 'clickItem' false)
      doubleClickItem=(action 'doubleClickItem' false)
      hook="bucket-nonSelectedItem"
      hookQualifiers=(hash index=index)
      index=index
      isSelected=false
      hovered=redux-state.hoveredItem
    }}
  {{/each}}
{{/frost-scroll}}
{{#frost-scroll class='frost-selected-bucket'}}
  {{#sortable-group onChange=(action 'reorderItems') as |group|}}
    {{#each redux-state.selectedItems as |item index|}}
      {{#sortable-item group=group model=item}}
        {{frost-bucket-item
          item=item
          titleAttr=titleAttr
          subtitleAttr=subtitleAttr
          valueAttr=valueAttr
          clickItem=(action 'clickItem' true)
          doubleClickItem=(action 'doubleClickItem' true)
          hook="bucket-selectedItem"
          hookQualifiers=(hash index=index)
          index=index
          isSelected=true
          hovered=redux-state.hoveredItem
        }}
      {{/sortable-item}}
    {{/each}}
  {{/sortable-group}}
{{/frost-scroll}}
<div class='frost-bucket-controls'>
  {{frost-button
    hook="bucket-toggle-button"
    text=(if redux-state.hoveredItem.isSelected 'Remove' 'Add')
    disabled=(eq redux-state.hoveredItem null)
    onClick=(action "selectHover")
  }}
  {{frost-button
    hook="bucket-next-button"
    text="Next"
    disabled=(eq redux-state.hoveredItem null)
    onClick=(action "hoverNextItem")
  }}
  {{frost-button
    hook="bucket-prev-button"
    text="Previous"
    disabled=(eq redux-state.hoveredItem null)
    onClick=(action "hoverPrevItem")
  }}
</div>